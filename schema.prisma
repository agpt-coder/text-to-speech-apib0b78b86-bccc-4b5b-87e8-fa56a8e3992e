// datasource db defines the database connection settings.
// It is configured for PostgreSQL and uses an environment variable for the connection URL.
// The 'extensions' feature enables the use of PostgreSQL-specific data types.
datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
}

// generator db configures Prisma Client settings.
// It is set up to use Prisma Client Python with asyncio interface and specific features.
generator db {
  provider             = "prisma-client-py"
  interface            = "asyncio"
  recursive_type_depth = 5
  previewFeatures      = ["postgresqlExtensions"]
}

model User {
  id        String    @id @default(dbgenerated("gen_random_uuid()"))
  email     String    @unique
  password  String
  role      Role      @default(FREEUSER) // Defines the role of the user
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  lastSeen  DateTime?

  ConversionRequests ConversionRequest[]
  ApiKeys            ApiKey[]
}

model ApiKey {
  id        String   @id @default(dbgenerated("gen_random_uuid()"))
  key       String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  createdAt DateTime @default(now())
}

model ConversionRequest {
  id           String           @id @default(dbgenerated("gen_random_uuid()"))
  userId       String
  user         User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  inputText    String
  languageCode String
  status       ConversionStatus @default(PENDING)
  errorMessage String?
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt
  outputLink   String?

  Customizations Customization?
  Language       Language       @relation(fields: [languageCode], references: [code])
  Analytics      Analytics[]
}

model Customization {
  id                  String            @id @default(dbgenerated("gen_random_uuid()"))
  conversionRequestId String            @unique
  conversionRequest   ConversionRequest @relation(fields: [conversionRequestId], references: [id], onDelete: Cascade)
  speechRate          Float?            @default(1.0) // Normal speech rate
  pauseLength         Int?              @default(0) // Pause length in milliseconds
  createdAt           DateTime          @default(now())
}

model Language {
  code        String              @id
  name        String
  supported   Boolean             @default(true)
  conversions ConversionRequest[]
}

model Analytics {
  id             String            @id @default(dbgenerated("gen_random_uuid()"))
  conversion     ConversionRequest @relation(fields: [conversionId], references: [id], onDelete: Cascade)
  conversionId   String
  requestId      String            @unique
  processingTime Int // In milliseconds
  createdAt      DateTime          @default(now())
}

enum ConversionStatus {
  PENDING
  SUCCESS
  FAILED
}

enum Role {
  FREEUSER
  PREMIUMUSER
  ADMIN
}

